Turbo Assembler	 Version 4.1	    11/11/12 18:17:30	    Page 1
C:\Users\zzzz\Desktop\11.13\7.ASM



      1	0000				     DATA  SEGMENT
      2	0000  1234			     BCD1  DW	     1234H
      3	0002  ????			     HEX1  DW	     ?
      4	0004  1235			     BCD2  DW	     1235H
      5	0006  ????			     HEX2  DW	     ?
      6	0008				     DATA  ENDS
      7
      8	0000				   STACK1  SEGMENT
      9	0000  C8*(00)				   DB	     200 DUP(0)
     10	00C8				   STACK1  ENDS
     11
     12
     13
     14	0000				     CODE  SEGMENT
     15						   ASSUME    CS:CODE,DS:DATA,SS:STACK1
     16	0000				   START:
     17	0000  B8 0000s				   MOV	     AX,DATA
     18	0003  8E D8				   MOV	     DS,AX
     19
     20	0005  B8 0000s				   MOV	     AX,STACK1
     21	0008  8E D0				   MOV	     SS,AX
     22
     23
     24	000A  A1 0000r				   MOV	     AX,BCD1
     25	000D  E8 0007				   CALL	     BCDTOH
     26	0010  A3 0002r				   MOV	     HEX1,AX
     27
     28	0013  B4 4C				   MOV	     AH,4CH	 ; 结束退出
     29	0015  CD 21				   INT	     21H
     30
     31
     32
     33	0017				   BCDTOH  PROC			 ; 将 AX 寄存器中的4位 BCD 码转换成2（16）进制数，结果保存在+
     34				     AX	中
     35
     36	0017  8B D8				   MOV	     BX,AX	 ; 因乘法运算必须用到 AX				    +
     37				     寄存器，可能会破坏原始数据，所以先转存到 BX 中
     38
     39	0019  BD 000A				   MOV	     BP,10	 ; 乘数10，每次扩大10倍
     40	001C  33 C0				   XOR	     AX,AX	 ; 保存结果的 AX 清零
     41	001E  B5 04				   MOV	     CH,4	 ; 循环4次
     42	0020  B1 04			   RETRY:  MOV	     CL,4	 ; 移位次数4
     43	0022  D3 C3				   ROL	     BX,CL	 ; 循环移位4位，将 BX 中的最高位移至最低位
     44	0024  53				   PUSH	     BX		 ; BX 压入堆栈暂存
     45	0025  83 E3 0F				   AND	     BX,0FH	 ; 清 BX 高12位，只保留低4位
     46	0028  F7 E5				   MUL	     BP		 ; 乘以10
     47	002A  03 C3				   ADD	     AX,BX	 ; 当前结果加上取得的最低位
     48	002C  5B				   POP	     BX		 ; 恢复	BX 的值
     49	002D  FE CD				   DEC	     CH		 ; 继续循环
     50	002F  75 EF				   JNZ	     RETRY
     51	0031  C3				   RET
     52	0032				   BCDTOH  ENDP
     53
     54	0032				     CODE  ENDS
     55						   END	     START
Turbo Assembler	 Version 4.1	    11/11/12 18:17:30	    Page 2
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "11/11/12"
??FILENAME		Text   "7	"
??TIME			Text   "18:17:30"
??VERSION		Number 040A
@CPU			Text   0101H
@CURSEG			Text   CODE			   #1  #8  #14
@FILENAME		Text   7
@WORDSIZE		Text   2			   #1  #8  #14
BCD1			Word   DATA:0000		   #2  24
BCD2			Word   DATA:0004		   #4
BCDTOH			Near   CODE:0017		   25  #33
HEX1			Word   DATA:0002		   #3  26
HEX2			Word   DATA:0006		   #5
RETRY			Near   CODE:0020		   #42	50
START			Near   CODE:0000		   #16	55

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  0032 Para	none		   #14	15
DATA			16  0008 Para	none		   #1  15  17
STACK1			16  00C8 Para	none		   #8  15  20
